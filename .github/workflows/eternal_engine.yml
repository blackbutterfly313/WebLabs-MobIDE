#
# ███████╗████████╗███████╗██╗    ██████╗  ██╗  ██╗      ███████╗███╗   ██╗ ██████╗ ██╗███╗   ██╗███████╗
# ██╔════╝╚══██╔══╝██╔════╝██║    ██╔══██╗██║  ██║      ██╔════╝████╗  ██║██╔════╝ ██║████╗  ██║██╔════╝
# █████╗     ██║   █████╗  ██║    ██████╔╝███████║      █████╗  ██╔██╗ ██║██║  ███╗██║██╔██╗ ██║█████╗
# ██╔══╝     ██║   ██╔══╝  ██║    ██╔═══╝ ██╔══██║      ██╔══╝  ██║╚██╗██║██║   ██║██║██║╚██╗██║██╔══╝
# ███████╗   ██║   ███████╗███████╗██║     ██║  ██║██████╗███████╗██║ ╚████║╚██████╔╝██║██║ ╚████║███████╗
# ╚══════╝   ╚═╝   ╚══════╝╚══════╝╚═╝     ╚═╝  ╚═╝╚═════╝╚══════╝╚═╝  ╚═══╝ ╚═════╝ ╚═╝╚═╝  ╚═══╝╚══════╝
#
# The Eternal Evolution Engine - A self-healing, self-improving, agentic CI/CD workflow.
# This workflow will run continuously, improving the codebase until there is nothing left to improve.
#

name: Eternal Evolution Engine

on:
  push:
    branches:
      - main
      - develop
  schedule:
    # Run the engine every night at 3:15 AM UTC to catch and fix regressions.
    - cron: '15 3 * * *'
  workflow_dispatch:

# Concurrency control ensures that only one instance of this engine runs at a time for the same branch.
# If a new run is triggered, the previous one will be cancelled to always work on the latest code.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ==================================================================================================
  # JOB 1: DISCOVER WORK - The brain of the operation.
  # Scans the repository to find modules and tasks, then generates a dynamic matrix for the next jobs.
  # ==================================================================================================
  discover-work:
    name: "🧠 Discover Work"
    runs-on: ubuntu-latest
    outputs:
      improvement_matrix: ${{ steps.generate_matrix.outputs.improvement_matrix }}
      evolution_matrix: ${{ steps.generate_matrix.outputs.evolution_matrix }}
      has_work: ${{ steps.generate_matrix.outputs.has_work }}

    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Set up Python for Discovery Script"
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: "Install Discovery Dependencies"
        run: pip install PyYAML glob2

      - name: "Run Discovery and Generate Matrix"
        id: generate_matrix
        run: |
          echo "Starting discovery..."
          python .github/scripts/discover_work.py

  # ==================================================================================================
  # JOB 2: CONTINUOUS IMPROVEMENT - The workhorse.
  # This is a dynamic matrix job that runs in parallel for every module found.
  # It lints, formats, tests, and auto-fixes code with Sourcery AI.
  # ==================================================================================================
  continuous-improvement:
    name: "🛠️ Improve (${{ matrix.module }})"
    needs: discover-work
    if: needs.discover-work.outputs.has_work == 'true'
    runs-on: ubuntu-latest
    continue-on-error: true # Allow individual modules to fail without stopping the entire workflow.
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover-work.outputs.improvement_matrix) }}

    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
        with:
          # We need a token to push changes back to the repo.
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: "Set up Environment for ${{ matrix.module_type }}"
        uses: ./.github/actions/setup-environment
        with:
          module_type: ${{ matrix.module_type }}

      - name: "Run Unstoppable Improvement Script"
        id: improvement_run
        env:
          SOURCERY_TOKEN: ${{ secrets.SOURCERY_TOKEN }}
        run: |
          echo "Starting improvement cycle for ${{ matrix.module }}"
          bash .github/scripts/run_improvement.sh "${{ matrix.module }}"

      - name: "Commit and Push Changes"
        if: steps.improvement_run.outputs.changes_made == 'true'
        run: |
          git config --global user.name "Eternal Evolution Engine"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "chore(${{ matrix.module }}): Continuous AI-driven improvement"
          git push

  # ==================================================================================================
  # JOB 3: AGENTIC EVOLUTION - The creative agent.
  # Attempts to solve complex tasks found during discovery.
  # ==================================================================================================
  agentic-evolution:
    name: "🚀 Evolve (${{ matrix.task_id }})"
    needs: discover-work
    if: needs.discover-work.outputs.has_work == 'true' && needs.discover-work.outputs.evolution_matrix != '[]'
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover-work.outputs.evolution_matrix) }}
    
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "Attempt AI-driven Evolution for Task"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }} # Optional, for a more powerful AI
        run: |
          echo "Attempting to solve task: ${{ matrix.task_description }}"
          # This script would contain logic to call an LLM to solve the task.
          # For now, it will simulate the process.
          echo "AI solution would be applied here for file: ${{ matrix.file_path }}"

  # ==================================================================================================
  # JOB 4: SELF HEALING & REPORTING - The final check.
  # Runs after all improvement jobs and reports the status.
  # If failures occurred, it creates an issue.
  # ==================================================================================================
  self-healing-and-reporting:
    name: "❤️‍🩹 Self-Heal & Report"
    runs-on: ubuntu-latest
    needs: [continuous-improvement, agentic-evolution]
    if: always() # This job runs even if previous jobs fail.

    steps:
      - name: "Check Status of All Jobs"
        id: job_status
        run: |
          echo "Improvement Status: ${{ needs.continuous-improvement.result }}"
          echo "Evolution Status: ${{ needs.agentic-evolution.result }}"
          if [ "${{ needs.continuous-improvement.result }}" == "failure" ] || [ "${{ needs.agentic-evolution.result }}" == "failure" ]; then
            echo "::set-output name=status::failure"
          else
            echo "::set-output name=status::success"
          fi

      - name: "Create Failure Report Issue"
        if: steps.job_status.outputs.status == 'failure'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const run_url = `https://github.com/${owner}/${repo}/actions/runs/${{ github.run_id }}`;
            await github.rest.issues.create({
              owner,
              repo,
              title: `🚨 Eternal Evolution Engine Failure Detected`,
              body: `The Eternal Evolution Engine encountered errors during its last run.\n\n**Workflow Run:** [View Logs](${run_url})\n\nHuman intervention may be required to resolve the underlying issues. The engine will continue to operate on its schedule, but a persistent failure could indicate a deeper problem.`
            });

      - name: "Report Success"
        if: steps.job_status.outputs.status == 'success'
        run: echo "✅ Eternal Evolution Engine cycle completed successfully. All modules passed."
