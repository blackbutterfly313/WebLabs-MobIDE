name: Universal Mobile DevOps

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build-android:
    name: Android Build & Artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

  test-python:
    name: Python Unit Tests & Dependency Cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          if [ -f scripts/test.py ]; then python scripts/test.py; fi

  docker-image:
    name: Build & Push Docker Image (if Dockerfile detected)
    runs-on: ubuntu-latest
    if: ${{ always() && (hashFiles('Dockerfile') != '') }}
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t ${{ github.repository }}:latest .

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.HUGGINGFACE_TOKEN }}

      - name: Push Docker image
        run: |
          docker tag ${{ github.repository }}:latest ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:latest

  artifact-sweep:
    name: Sweep & Archive Common Artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Archive models, deps, and manifests
        uses: actions/upload-artifact@v3
        with:
          name: repo-artifacts
          path: |
            ai/downloads/**
            ai/deps/**
            ai/download_manifest.json
            dist/**
            build/**
            output/**
        continue-on-error: true

















